<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wizian.cbb.recruit.dao.IRcrRepository">
	<resultMap id="pbancMap"
		type="com.wizian.cbb.recruit.model.RcrPbancVO">
		<result property="pbancSn" column="pbanc_sn" />
		<result property="pbancName" column="pbanc_nm" />
		<result property="numRcr" column="rcrut_nope" />
		<result property="slry" column="slry" />
		<result property="pbancContent" column="pbanc_cn" />
		<result property="endYMD" column="pbanc_end_ymd" />
		<result property="aprvYN" column="pbanc_aprv_yn" />
		<result property="startDT" column="pbanc_dt" />
		<result property="epmType" column="epm_type_nm" />
		<result property="rcrStatus" column="acbg_stts" />
		<result property="bizRegNum" column="brno" />
	</resultMap>

	<select id="getAllPbancsfromDB" resultMap="pbancMap">
		SELECT * FROM
		RECRUIT_NOTICE
	</select>

	<select id="getPbancfromDB" parameterType="string"
		resultMap="pbancMap">
		SELECT * from RECRUIT_NOTICE WHERE pbanc_sn = #{pbancSN}
	</select>

	<select id="getComInfo" resultType="hashMap"
		parameterType="string">
		SELECT
		"BRNO" AS brno,
		"LCNT_ADDR" AS lcntAddr,
		"ENT_KND"
		AS entKnd,
		"TPBIZ_NM" AS tpBizNm,
		"BZENTY_NM" AS bzentyNm,
		"BZENTY_RPRSV_NM" AS bzentyRprsvNm,
		"ANL_SLS_AMT" AS anlSlsAmt,
		"ANLSL_AMT" AS anlslAmt,
		"FNDN_YR" AS fndnYr,
		"CPTL" AS cptl,
		"TNOWK" AS
		tnowk,
		"LAST_REG_DT" AS lastRegDt
		FROM "SCOTT"."COMPANY_INFO" WHERE
		"BRNO" = #{bizRegNum}
	</select>

	<select id="getSTDNTInfo" resultType="hashMap"
		parameterType="string">
		SELECT "STDNT_SN" AS stdntSn FROM "SCOTT"."STDNT"
		WHERE
		"USER_NO" = #{userNo}
	</select>



	<insert id="setJSData" parameterType="hashMap">
		<selectKey keyProperty="count" resultType="int"
			order="BEFORE">
			SELECT COUNT(*) AS count FROM JOB_SEARCH WHERE STDNT_SN =
			#{stdSn} AND
			PBANC_SN = #{pbancSn}
		</selectKey>
		<choose>
			<when test="count > 0">
				UPDATE JOB_SEARCH
				SET APLY_DT = #{nowDate},
				JNCMP_APLY_YN = #{applyYn}, BRNO =
				#{bizRegNum}
				WHERE STDNT_SN =
				#{stdSn} AND PBANC_SN = #{pbancSn}
			</when>
			<otherwise>
				INSERT INTO JOB_SEARCH (STDNT_SN, APLY_DT, JNCMP_APLY_YN,
				PBANC_SN, BRNO)
				VALUES (#{stdSn}, #{nowDate}, #{applyYn}, #{pbancSn},
				#{bizRegNum})
			</otherwise>
		</choose>
	</insert>

	<select id="getCheckAply" resultType="hashmap"
		parameterType="string">
		SELECT JNCMP_APLY_YN from JOB_SEARCH WHERE STDNT_SN =
		#{stdSn} AND PBANC_SN
		= #{pbancSn}
	</select>


	<update id="setAplyCancle" parameterType="hashMap">
		UPDATE JOB_SEARCH
		SET
		JNCMP_APLY_YN = 'N'
		WHERE STDNT_SN = #{stdSn} AND PBANC_SN = #{pbancSn}
	</update>


	<select id="getAplyPbancListDB" resultType="hashMap"
		parameterType="string">
		select pbanc_sn from job_search where STDNT_SN =
		#{userSTDNTSN} and JNCMP_APLY_YN = 'y'
	</select>

	<select id="getAllStdntInfo" resultType="hashMap"
		parameterType="string">
		select * from STDNT where STDNT_SN = #{userSTDNTSN}
	</select>

	<insert id="resumeInsert" parameterType="hashMap">
		insert all
		into lng(RSM_SN, STDNT_SN, LNG_NM, LNG_GRD) values
		(RSM_SEQ.nextVal,#{stdntsn},#{languageType},#{languageGrade})
		into crtfct(RSM_SN, STDNT_SN, CRTFCT_NM, ISSU_INST_NM, CRTFCT_ACQS_YMD)
		values
		(RSM_SEQ.nextVal,#{stdntsn},#{certificate},#{issuer},#{certificationDate})
		into actv(RSM_SN, STDNT_SN, ACTV_NM, ACTV_CN, ACTV_CN2) values
		(RSM_SEQ.nextVal, #{stdntsn}, #{experience}, #{socialNote1},
		#{socialNote2})
		into acbg(RSM_SN, STDNT_SN, GRDTN_YM, GRDTN_STTS, SCH_NM) values
		(RSM_SEQ.nextVal, #{stdntsn}, #{graduationDate}, #{graduationStatus},
		#{schoolName})
		into resume(RSM_SN, STDNT_SN, APLY_CN, HSTRY_FAIL, PLAN, RSM_NM, MK_DATE)
		values (RSM_SEQ.nextVal, #{stdntsn}, #{motivation},
		#{failureExperience},#{futurePlan},#{title},TO_CHAR(sysdate,'yyyy.mm.dd
		hh24:mi'))
		select * from dual
	</insert>

	<select id="getAllResumeList" parameterType="string"
		resultType="hashMap">

		SELECT *
		FROM resume r
		INNER JOIN lng l ON r.STDNT_SN = l.STDNT_SN and r.rsm_sn = l.rsm_sn
		INNER JOIN crtfct c ON r.STDNT_SN = c.STDNT_SN and r.rsm_sn = c.rsm_sn
		INNER JOIN actv a ON r.STDNT_SN = a.STDNT_SN and r.rsm_sn = a.rsm_sn
		INNER JOIN acbg ab ON r.STDNT_SN = ab.STDNT_SN and r.rsm_sn =
		ab.rsm_sn
		WHERE r.STDNT_SN = #{stdntsn}
	</select>

<delete id="deleteLng" parameterType="string">
    DELETE FROM lng WHERE RSM_SN = #{value}
</delete>

<delete id="deleteCrtfct" parameterType="string">
    DELETE FROM crtfct WHERE RSM_SN = #{value}
</delete>

<delete id="deleteActv" parameterType="string">
    DELETE FROM actv WHERE RSM_SN = #{value}
</delete>

<delete id="deleteAcbg" parameterType="string">
    DELETE FROM acbg WHERE RSM_SN = #{value}
</delete>

<delete id="deleteResume" parameterType="string">
    DELETE FROM resume WHERE RSM_SN = #{value}
</delete>


<select id="getBrno" parameterType="string" resultType="string">
	select BRNO from com_manager where user_no = #{data}
</select>


<insert id="bzWritePbancDB" parameterType="hashMap">
insert into RECRUIT_NOTICE(PBANC_SN, PBANC_NM, RCRUT_NOPE, SLRY, PBANC_CN, PBANC_END_YMD, PBANC_APRV_YN, PBANC_DT, EPM_TYPE_NM, ACBG_STTS, BRNO)
values (PBANC_SN_SEQ.nextVal, #{title}, #{empNum}, #{slry}, #{pbancCT}, TO_DATE(#{endDate}, 'YYYY-MM-DD"T"HH24:MI:SS.FF3'), 'N', TO_DATE(#{startDate}, 'YYYY-MM-DD"T"HH24:MI:SS.FF3'), #{empType}, #{stts}, #{brno})

</insert>

</mapper>